@page
@model RegisterModel
@{
    ViewData["Title"] = "Register";
}
@using Microsoft.Extensions.Configuration
@using Microsoft.Extensions.Options
@using PracticeProject.Models;
@inject IOptions<GoogleCaptchaConfig> GoogleCaptchaConfig
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://www.google.com/recaptcha/api.js?render=@GoogleCaptchaConfig.Value.SiteKey"></script>



<div class="edit-form-box container">
    <h2>Регистрация</h2>
    <hr />
    <div>
        <form id="registerForm" asp-route-returnUrl="@Model.ReturnUrl" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger" role="alert"></div>
            <div class="form-floating mb-3">
                <input asp-for="Input.Nickname" class="form-control" autocomplete="nickname" aria-required="true" placeholder="" />
                <label asp-for="Input.Nickname">Nickname</label>
                <span asp-validation-for="Input.Nickname" class="text-danger"></span>
            </div>
            <input asp-for="Input.Token" type="hidden" id="token" />
            <div class="form-floating mb-3">
                <input asp-for="Input.Email" class="form-control" autocomplete="username" aria-required="true" placeholder="name@example.com" />
                <label asp-for="Input.Email">Email</label>
                <span asp-validation-for="Input.Email" class="text-danger"></span>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="Input.Password" class="form-control" autocomplete="new-password" aria-required="true" placeholder="password" />
                <label asp-for="Input.Password">Password</label>
                <span asp-validation-for="Input.Password" class="text-danger"></span>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="Input.ConfirmPassword" class="form-control" autocomplete="new-password" aria-required="true" placeholder="password" />
                <label asp-for="Input.ConfirmPassword">Confirm Password</label>
                <span asp-validation-for="Input.ConfirmPassword" class="text-danger"></span>
            </div>
            <input id="registerSubmit" type="submit" value="Зарегистрироваться">
        </form>
    </div>
    <div class="col-md-6 col-md-offset-2" style="display: none">
        <section>
            <h3>Use another service to register.</h3>
            <hr />
            @{
                if ((Model.ExternalLogins?.Count ?? 0) == 0)
                {
                    <div>
                        <p>
                            There are no external authentication services configured. See this <a href="https://go.microsoft.com/fwlink/?LinkID=532715">
                                article
                                about setting up this ASP.NET application to support logging in via external services
                            </a>.
                        </p>
                    </div>
                }
                else
                {
                    <form id="external-account" asp-page="./ExternalLogin" asp-route-returnUrl="@Model.ReturnUrl" method="post" class="form-horizontal">
                        <div>
                            <p>
                                @foreach (var provider in Model.ExternalLogins!)
                                {
                                    <button type="submit" class="btn btn-primary" name="provider" value="@provider.Name" title="Log in using your @provider.DisplayName account">@provider.DisplayName</button>
                                }
                            </p>
                        </div>
                    </form>
                }
            }
        </section>
    </div>
</div>
<script>
    function getToken() {
        $(function () {
            grecaptcha.ready(function () {
                debugger;
                grecaptcha.execute('@GoogleCaptchaConfig.Value.SiteKey', { action: 'submit' }).then(function (token) {
                    document.getElementById('token').value = token;
                });
            });
        });
    }
    setInterval(getToken, 115000);
    $(function () {
        getToken();
    });
</script>
@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
